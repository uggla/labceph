- name: Create osd volumes
  hosts: osd
  gather_facts: False
  remote_user: ceph

  vars:
    - home_dir: "~"
    - known_hosts_file: "{{ home_dir }}/.ssh/known_hosts"
    - vm_name: "{{ inventory_hostname }}"
    - vm_image: "/var/lib/libvirt/images/{{ vm_name }}.img"
    - pool_dev: "templates/default.xml"
    
  tasks:

    - name: Define default storage pool
      shell: virsh pool-list | grep -i default
      register: result
      delegate_to: localhost

    - shell: virsh pool-create "templates/default.xml"
      when: result|failed
      delegate_to: localhost

    - name: Define new volume 1 for osd
      shell: virsh vol-create-as --pool default --name {{ vm_name }}_osd1.img --capacity 10G --format raw
#      args:
#       creates: /var/lib/libvirt/images/{{ vm_name }}_osd1.img
      delegate_to: localhost

    - name: Define new volume 2 for osd
      shell: virsh vol-create-as --pool default --name {{ vm_name }}_osd2.img --capacity 10G --format raw
#      args:
#        creates: /var/lib/libvirt/images/{{ vm_name }}_osd2.img
      delegate_to: localhost

    - name: Attach volume 1 to osd
      shell: virsh attach-disk --domain {{ vm_name }} --source /var/lib/libvirt/images/{{ vm_name }}_osd1.img --target vdb --persistent
      delegate_to: localhost

    - name: Attach volume 2 to osd
      shell: virsh attach-disk --domain {{ vm_name }} --source /var/lib/libvirt/images/{{ vm_name }}_osd2.img --target vdc --persistent
      delegate_to: localhost

    - name: Remove target host old servers identities from local known_hosts list
      shell: ssh-keygen -R  {{ item }}
      with_items:
        - "{{ inventory_hostname }}"
      delegate_to: localhost
      ignore_errors: yes

    - name: Get target host current fingerprint
      shell: ssh-keyscan {{ hash_option | default("")}} {{ inventory_hostname }} >> {{ known_hosts_file }}
      delegate_to: localhost


    - name: Initialize volume
      shell: mkfs.ext4 /dev/vdb && mkfs.ext4 /dev/vdc
      sudo: True

    - name: Create mount point
      shell: mkdir -p /osd/osd1 && mkdir -p /osd/osd2
      sudo: True

    - name: Mount fs
      shell: mount /dev/vdb /osd/osd1 && mount /dev/vdc /osd/osd2
      sudo: True
